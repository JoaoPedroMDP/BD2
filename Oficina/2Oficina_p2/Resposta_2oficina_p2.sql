-- Primeiro é necessário criar as tabelas com o script Oficina_2_p1

-- TABELA DE LOG TABELA DE LOG TABELA DE LOG TABELA DE LOG TABELA DE LOG
-- TABELA DE LOG TABELA DE LOG TABELA DE LOG TABELA DE LOG TABELA DE LOG 
CREATE TABLE logSalarios as (SELECT * FROM TRABALHA t WHERE 1=2);
ALTER TABLE LOGSALARIOS RENAME COLUMN salario TO old_salario;
ALTER TABLE LOGSALARIOS ADD new_salario NUMBER (6, 2);
ALTER TABLE LOGSALARIOS ADD cod_log NUMBER (5);
ALTER TABLE LOGSALARIOS ADD CONSTRAINT PkLog PRIMARY KEY (cod_log);

-- SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG
-- SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG SEQ LOG
DROP SEQUENCE SeqPkLog;
CREATE SEQUENCE SeqPkLog START WITH 1 INCREMENT BY 1;

-- TRIGGER PK LOG TRIGGER PK LOG TRIGGER PK LOG TRIGGER PK LOG TRIGGER PK LOG
-- TRIGGER PK LOG TRIGGER PK LOG TRIGGER PK LOG TRIGGER PK LOG TRIGGER PK LOG
CREATE OR REPLACE TRIGGER TriPkLog
BEFORE INSERT OR UPDATE ON logSalarios
FOR EACH ROW 
DECLARE 
	new_code NUMBER (5);
BEGIN
	IF inserting THEN
		SELECT SeqPkLog.nextval INTO new_code FROM dual;
		:NEW.cod_log := new_code;
	END IF;
END;

-- EMPREGADO EMPREGADO EMPREGADO EMPREGADO EMPREGADO EMPREGADO EMPREGADO 
-- EMPREGADO EMPREGADO EMPREGADO EMPREGADO EMPREGADO EMPREGADO EMPREGADO 
DROP SEQUENCE SeqPkEmpregado;
CREATE SEQUENCE SeqPkEmpregado START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TriPkEmpregado
BEFORE UPDATE OR INSERT ON empregado
FOR EACH ROW 
DECLARE 
	novo_cod NUMBER (5);
BEGIN
	IF inserting THEN
		SELECT SeqPkEmpregado.nextval INTO novo_cod FROM dual;
		:NEW.codE := novo_cod;
	END IF;

	:NEW.nome := upper(:NEW.nome);
	:NEW.rua := upper(:NEW.rua);
	:NEW.cidade := upper(:NEW.cidade);
	:NEW.cpf := upper(:NEW.cpf);
	:NEW.rg := upper(:NEW.rg);
	:NEW.mae := upper(:NEW.mae);
END;

-- TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA
-- TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA TRABALHA

CREATE OR REPLACE TRIGGER TriTrabalha
BEFORE INSERT OR UPDATE ON TRABALHA
FOR EACH ROW
DECLARE 
	novo_salario NUMBER (15,2);
BEGIN 
	IF inserting OR updating THEN 
		IF :NEW.salario < :OLD.salario THEN
			novo_salario := :OLD.salario;
		ELSE
			novo_salario := :NEW.salario;
		END IF;
	
		IF novo_salario <> :OLD.salario THEN
			INSERT INTO LOGSALARIOS l (code, codc, old_salario, new_salario) 
			VALUES (:NEW.code, :NEW.codc, :OLD.salario, novo_salario);
		END IF;
	END IF;
END;

-- COMPANHIA COMPANHIA COMPANHIA COMPANHIA COMPANHIA COMPANHIA COMPANHIA
-- COMPANHIA COMPANHIA COMPANHIA COMPANHIA COMPANHIA COMPANHIA COMPANHIA
DROP SEQUENCE SeqPkCompanhia;
CREATE SEQUENCE SeqPkCompanhia START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER TriPkCompanhia
BEFORE UPDATE OR INSERT ON companhia
FOR EACH ROW
DECLARE
	novo_cod NUMBER (5);
BEGIN
	IF inserting THEN
		SELECT SeqPkCompanhia.nextval INTO novo_cod FROM dual;
		:NEW.codC := novo_cod;
	END IF;

	:NEW.nome := upper(:NEW.nome);
	:NEW.cidade := upper(:NEW.cidade);
END;